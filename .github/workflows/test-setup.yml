name: Test Setup - Diagnose Issues

on:
  workflow_dispatch:  # Manual trigger only
  push:
    branches: [test-setup]

jobs:
  diagnose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Environment
        run: |
          echo "üîç Environment Check"
          echo "==================="
          echo "Runner OS: $RUNNER_OS"
          echo "GitHub Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo ""

      - name: Check Secrets
        run: |
          echo "üîê Secrets Check"
          echo "================"
          if [ -z "${{ secrets.DIGITALOCEAN_TOKEN }}" ]; then
            echo "‚ùå DIGITALOCEAN_TOKEN is NOT set"
            echo ""
            echo "üõ†Ô∏è To fix this:"
            echo "1. Go to: https://cloud.digitalocean.com/account/api/tokens"
            echo "2. Create a new token with read/write permissions"
            echo "3. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "4. Add secret: DIGITALOCEAN_TOKEN = your_token"
            echo ""
            exit 1
          else
            echo "‚úÖ DIGITALOCEAN_TOKEN is set"
            echo "Token length: ${#DIGITALOCEAN_TOKEN}"
            echo "Token prefix: ${DIGITALOCEAN_TOKEN:0:8}..."
          fi
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Test DigitalOcean API
        run: |
          echo "üåä DigitalOcean API Test"
          echo "======================="
          
          # Test API connectivity
          response=$(curl -s -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.DIGITALOCEAN_TOKEN }}" \
            "https://api.digitalocean.com/v2/account" -o /tmp/do_response.json)
          
          if [ "$response" = "200" ]; then
            echo "‚úÖ DigitalOcean API is accessible"
            echo "Account info:"
            cat /tmp/do_response.json | jq '.account | {email, status, team}'
          else
            echo "‚ùå DigitalOcean API failed with status: $response"
            echo "Response:"
            cat /tmp/do_response.json
            exit 1
          fi

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.0

      - name: Test OpenTofu
        working-directory: ./infra
        run: |
          echo "üèóÔ∏è OpenTofu Test"
          echo "==============="
          
          # Use the simple configuration
          cp simple.tf main.tf
          
          echo "Initializing OpenTofu..."
          tofu init
          
          echo "Validating configuration..."
          tofu validate
          
          echo "Planning (dry run)..."
          tofu plan -var="do_token=${{ secrets.DIGITALOCEAN_TOKEN }}" \
                    -var="cluster_name=test-cluster" \
                    -var="region=nyc1" \
                    -var="node_count=1"
          
          echo "‚úÖ OpenTofu configuration is valid"

      - name: Check DigitalOcean Limits
        run: |
          echo "üìä DigitalOcean Account Limits"
          echo "============================="
          
          # Check droplet limits
          curl -s -H "Authorization: Bearer ${{ secrets.DIGITALOCEAN_TOKEN }}" \
            "https://api.digitalocean.com/v2/account" | \
            jq '.account | {droplet_limit, floating_ip_limit, volume_limit}'
          
          # Check current usage
          echo ""
          echo "Current Droplets:"
          curl -s -H "Authorization: Bearer ${{ secrets.DIGITALOCEAN_TOKEN }}" \
            "https://api.digitalocean.com/v2/droplets" | \
            jq '.droplets | length'
          
          echo ""
          echo "Current Kubernetes Clusters:"
          curl -s -H "Authorization: Bearer ${{ secrets.DIGITALOCEAN_TOKEN }}" \
            "https://api.digitalocean.com/v2/kubernetes/clusters" | \
            jq '.kubernetes_clusters | length'

      - name: Success Summary
        run: |
          echo "üéâ Diagnosis Complete"
          echo "===================="
          echo "‚úÖ All checks passed!"
          echo "‚úÖ DigitalOcean token is valid"
          echo "‚úÖ API is accessible"
          echo "‚úÖ OpenTofu configuration is valid"
          echo ""
          echo "üöÄ Ready to deploy!"
          echo "The main workflow should work now."
