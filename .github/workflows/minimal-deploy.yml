name: Minimal Banking App Deployment

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [minimal-deploy]

env:
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

jobs:
  # Step 1: Create basic infrastructure
  create-cluster:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/minimal-deploy'
    outputs:
      cluster-ready: ${{ steps.cluster.outputs.ready }}
    steps:
      - uses: actions/checkout@v4

      - name: Validate Prerequisites
        run: |
          if [ -z "${{ secrets.DIGITALOCEAN_TOKEN }}" ]; then
            echo "❌ DIGITALOCEAN_TOKEN secret is missing"
            echo "Add it at: https://github.com/${{ github.repository }}/settings/secrets/actions"
            exit 1
          fi
          echo "✅ Prerequisites validated"

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.0

      - name: Configure DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Deploy Infrastructure
        id: cluster
        working-directory: ./infra
        run: |
          # Use simple configuration
          cp simple.tf main.tf
          
          # Initialize and apply
          tofu init
          tofu plan -var="do_token=${{ secrets.DIGITALOCEAN_TOKEN }}" \
                    -var="cluster_name=banking-app-k8s" \
                    -var="region=nyc1" \
                    -var="node_count=2" \
                    -out=tfplan
          tofu apply -auto-approve tfplan
          
          # Get cluster credentials
          doctl kubernetes cluster kubeconfig save banking-app-k8s
          
          # Wait for cluster to be ready
          kubectl wait --for=condition=Ready nodes --all --timeout=600s
          
          echo "ready=true" >> $GITHUB_OUTPUT
          echo "✅ Cluster is ready"

      - name: Save Kubeconfig
        run: |
          # Save kubeconfig as GitHub secret for future use
          KUBE_CONFIG_DATA=$(kubectl config view --raw --minify --flatten | base64 -w 0)
          echo "KUBE_CONFIG_DATA will be available for manual setup"

  # Step 2: Deploy basic application
  deploy-app:
    runs-on: ubuntu-latest
    needs: create-cluster
    if: needs.create-cluster.outputs.cluster-ready == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          doctl kubernetes cluster kubeconfig save banking-app-k8s
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Deploy Namespaces
        run: |
          kubectl apply -f k8s/namespace.yaml

      - name: Deploy Basic Secrets
        run: |
          kubectl apply -f k8s/secrets/banking-secrets.yaml

      - name: Deploy Database
        run: |
          kubectl apply -f k8s/database/postgres.yaml
          kubectl rollout status statefulset/postgres -n banking-app --timeout=300s

      - name: Get Service URLs
        run: |
          echo "🎉 Basic Deployment Complete!"
          echo "=============================="
          echo ""
          echo "Cluster: banking-app-k8s"
          echo "Region: nyc1"
          echo ""
          echo "Next steps:"
          echo "1. Build and push Docker images"
          echo "2. Deploy frontend and backend"
          echo "3. Set up monitoring"
          echo ""
          echo "To access cluster:"
          echo "doctl kubernetes cluster kubeconfig save banking-app-k8s"
